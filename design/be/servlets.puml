@startuml
skinparam classAttributeIconSize 0

package javax.servlet.http {
    class HttpServlet {

    }
}

package ch.giuliobosco.freqline.servlets {
    abstract BaseServlet {
        + {static} String S_200_OK
        + {static} String S_201_CREATED
        + {static} String S_201_NO_CONTENT
        + {static} String S_304_NOT_MODIFIED
        + {static} String S_400_BAD_REQUEST
        + {static} String S_401_UNAUTHORIZED
        + {static} String S_403_FORBIDDEN
        + {static} String S_404_NOT_FOUND
        + {static} String S_406_NOT_ACCEPTABLE
        + {static} String S_409_CONFLICT
        + {static} String S_500_INTERNAL_SERVER_ERROR
        + {static} String S_501_NOT_IMPLEMENTED
        + {static} String S_STATUS
        + {static} String S_STATUS_STRING
        + {static} String S_STATUS_ERROR
        + {static} String S_STATUS_NOT_ACCEPTABLE
        + {static} String S_NOT_VALID_PARAMETERS
        + {static} String S_MISSING_PARAMETERS
        + {static} String S_PATH
        + {static} String S_ACTION
        + {static} String S_MESSAGE
        + {static} String S_REQUEST_URI
        + {static} String S_REQUEST_URL
        + {static} String S_METHOD
        + {static} String S_REQUEST
        - JdbcConnector connector
        # JdbcConnector getConnector()
        # JdbcConnector setConnector(JdbcConnector connector)
        # void ok(HttpServletResponse response, String string)
        # void ok(HttpServletResponse response, JSONObject jo)
        # void created(HttpServletResponse response, String string)
        # void created(HttpServletResponse response, JSONObject jo)
        # void noContent(HttpServletResponse response)
        # void notModified(HttpServletResponse response)
        # void badRequest(HttpServletResponse response, HttpServletResponse response)
        # void unauthorized(HttpServletResponse response, HttpServletResponse response)
        # void forbidden(HttpServletResponse response, String action)
        # void notFound(HttpServletResponse response, HttpServletResponse response)
        # void notAcceptable(HttpServletResponse response, HttpServletResponse response)
        # void conflict(HttpServletResponse response, String string)
        # void internalServerError(HttpServletResponse response, String message)
        # void internalServerError(HttpServletResponse response, JSONObject jo)
        # void notImplemented(HttpServletResponse response)
        - void write(HttpServletResponse response, String string)
        - void writeStatus(HttpServletResponse response, int statusCode, String statusCode)
        - void writeStatus(HttpServletResponse response, int statusCode, String statusString, String message)
        - void writeStatus(HttpServletResponse response, int statusCode, String statusString, JSONObject jo)
        - JSONObject requestToJson(HttpServletRequest request)
        - JSONObject requestToJson(HttpServletRequest request, JSONObject jo)
        # void notValidParameters(HttpServletResponse response, String[] notValidParameters)
        # void missingParameters(HttpServletResponse response, Stringp[] missingParameters)
        + JSONObject getOkResponse()
        + JSONObject getOkResponse(int id)
        + JSONOBject getNotCapableResponse()
        + void closeConnector()
        # String firstValue(Map<String, String[]> map, String key)
        # {abstract} String getPath();
        # void doOptions(HttpServletRequest request, HttpServletResponse response)
    }
    HttpServlet <|-- BaseServlet

    package data {
        class BaseDataServlet {
            - int getId(HttpServletRequest request)
            # void doGet(HttpServletRequest request, HttpServletResponse response)
            - void doGetById(HttpServletRequest request, HttpServletResponse response, DbDao dao)
            - void doGetAll(HttpServletResponse response, DbDao dao)
            # void doDelete(HttpServletRequest request, HttpServletResponse response)
            # void doPost(HttpServletRequest request, HttpServletResponse response)
            - void executePost(HttpServletResponse response, ServletRequestAnalyser sra, int actionBy)
            # void doPut(HttpServletRequest request, HttpServletResponse response)
            - void executePut(HttpServletRequest request, HttpServletResponse response, ServletRequestAnalyser sra)
            # String[] getRequiredPutParameters()
            # String[] getRequiredPostParameters()
            - DbDao getDao(int actionBy)
            - void initConnector()
            # Base getBase(Map<String, String> params, DbDao dao, String key)
            - boolean hasRequiredPermission(int userId, String requiredPermission)
            - boolean hasRequiredPermission(User user, String requiredPermission)
            # {abstract} Base mapToBase(Map<String, String[]> params, Base base, int actionBy)
            # {abstract} Class<? extends Base> getModel()
            # {abstract} DbDao getDao(JdbcConnector connector, int actionBy)
            # {abstract} BaseJson getJson(Base base)
            # {abstract} String requiredGetPermission()
            # {abstract} String requiredPostPermission()
            # {abstract} String requiredPutPermission()
            # {abstract} String requiredDeletePermission()
        }
        BaseServlet <|-- BaseDataServlet

        class GeneratorServlet {

        }
        BaseDataServlet <|-- GeneratorServlet

        class GroupPermissionServlet {

        }
        BaseDataServlet <|-- GroupPermissionServlet

        class GroupServlet {

        }
        BaseDataServlet <|-- GroupServlet

        class MicServlet {

        }
        BaseDataServlet <|-- MicServlet

        class PermissionServlet {

        }
        BaseDataServlet <|-- PermissionServlet

        class RemoteServlet {

        }
        BaseDataServlet <|-- RemoteServlet

        class UserGroupServlet {

        }
        BaseDataServlet <|-- UserGroupServlet

        class UserServlet {

        }
        BaseDataServlet <|-- UserServlet
    }

    package action {
        class LoginServlet {
            - String LOGGED_IN 
            - String WRONG_USERNAME_PASSWORD
            # void doPost(HttpServletRequest request, HttpServletResponse response)
            - void checkOldSession(HttpServletRequest request)
            - void executePost(HttpServletRequest request, HttpServletResponse response, ServletRequestAnalyser sra)
            # void doGet(HttpServletRequest request, HttpServletResponse response)
        }
        LoginServlet --|> BaseServlet

        class GeneratorStatusServlet {
            - String GET_GENERATOR_STATUS_PERM
            - String SET_GENERATOR_STATUS_PERM
            - String STATUS
            - String[] REQUIRED_POST_PARAMETERS
            # void doPost(HttpServletRequest request, HttpServletResponse response)
            # void doGet(HttpServletRequest request, HttpServletResponse response)
            - void executePost(HttpServletResponse response, Connection connection, int userId, ServletRequestAnalyser sra)
        }
        GeneratorStatusServlet --|> BaseServlet

        class GeneratorMicServlet {
            - String SET_GENERATOR_MIC_PERM
            - String GET_GENERATOR_MIC_PERM
            - String TIMER
            - String[] REQUIRED_POST_PARAMETERS
            - void executePost(HttpServletResponse response, Connection connection, int userId, ServletRequestAnalyser sra)
            # void doPost(HttpServletRequest request, HttpServletResponse response)
            # void doGet(HttpServletRequest request, HttpServletResponse response)
        }
        GeneratorMicServlet --|> BaseServlet

        class GeneratorFrequenceServlet {
            - String SET_GENERATOR_FREQUENCE_PERM
            - String GET_GENERATOR_FREQUENCE_PERM
            - String FREQUENCE
            - String[] REQUIRED_POST_PARAMETERS
            - void executePost(HttpServletResponse response, Connection connection, int userId, ServletRequestAnalyser sra)
            # void doPost(HttpServletRequest request, HttpServletResponse response)
            # void doGet(HttpServletRequest request, HttpServletResponse response)
        }
        GeneratorFrequenceServlet --|> BaseServlet

        class GeneratorDecibelServlet {
            - String SET_GENERATOR_DECIBEL_PERM
            - String GET_GENERATOR_DECIBEL_PERM
            - String DECIBEL
            - String[] REQUIRED_POST_PARAMETERS
            - void executePost(HttpServletResponse response, Connection connection, int userId, ServletRequestAnalyser sra)
            # void doPost(HttpServletRequest request, HttpServletResponse response)
            # void doGet(HttpServletRequest request, HttpServletResponse response)
        }
        GeneratorDecibelServlet --|> BaseServlet

        class AccServlet {
            - String KEY_C
            - String ACTION
            - String CONTENT
            - String ACTION_MIC
            - String ACTION_REMOTE
            - String ACTION_REMOTE_TOGGLE
            - String ACTION_REMOTE_ON
            - String ACTION_REMOTE_OFF
            - String ACTION_CONF
            - String[] POST_REQUIRED_PARAMETERS
            - Connection connection
            - ServletRequestAnalyser sra
            - Connection getConnection()
            - ServletRequestAnalyser getSra()
            - String getKeyC()
            - String getAction()
            - String getContent()
            # void doPost(HttpServletRequest request, HttpServletResponse response)
            - void executePost(HttpServletResponse response)
            - void conf(HttpServletResponse response)
            - void mic(HttpServletResponse response)
            - void remote(HttpServletResponse response)
            - void remoteToggle(HttpServletResponse response)
            - boolean isValidKey()
        }
    }
}

@enduml