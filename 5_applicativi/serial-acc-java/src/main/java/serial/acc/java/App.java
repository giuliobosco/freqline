/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package serial.acc.java;

import com.fazecast.jSerialComm.SerialPort;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

public class App {
    public static final byte INIT = 42;

    public static final byte RETURN = (byte) '\n';

    public static void main(String[] args) {
        // search arduino on serial
        SerialPort serialPort = null;
        for (SerialPort serial : SerialPort.getCommPorts()) {
            if (serial.getDescriptivePortName().contains("Arduino")) {
                serialPort = serial;
            }
        }

        // exit if arduino not found
        if (serialPort == null) {
            System.out.println("Arduino not found");
            return;
        }

        // set new higher timeouts
        serialPort.setComPortTimeouts(SerialPort.TIMEOUT_READ_BLOCKING, 100000000, 10000000);

        // open serial port communication
        if (!serialPort.openPort()) {
            System.out.println("Error while opening communication");
        }

        // set streams (I/O)
        InputStream input = serialPort.getInputStream();
        OutputStream output = serialPort.getOutputStream();

        int read;
        try {
            // wait until INIT char
            while ((read = input.read()) != INIT) { }

            SerialEchoCommand sc = new SerialEchoCommand("HelloWorld!".getBytes());
            sc.write(output);

            SerialCommunication serialCommunication = new SerialCommunication();
            serialCommunication.readUntilEnd(input);
            System.out.println((char) serialCommunication.getSequence());
            System.out.println(new String(serialCommunication.getMessage()));

            // close streams
            output.close();
            input.close();
        } catch (IOException ioe) {
            ioe.printStackTrace();
            System.out.println(ioe.getMessage());
        }
    }
}
